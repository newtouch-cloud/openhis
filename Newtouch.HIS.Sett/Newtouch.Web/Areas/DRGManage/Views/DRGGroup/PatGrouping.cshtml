
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_IndexV.cshtml";
}

<style>
    .fulldiv {
        height: 98%;
        /*overflow-y: scroll;*/
        overflow-x: hidden;
        width: 100%;
        padding: 5px 2px;
    }

    .list-group-item {
        padding: 8px 5px;
    }
    .thdrg {
        font-size: 15px;
        color: #5698c3;
    }

    .table .thead-blue th {
        color: #fff;
        background-color: #5698c3;
        border-color: #baccd9;
    }
</style>
<div class="container" style="background-color:#ffffff;width: 99.5%;">
    <div class="row fulldiv">
        <div class="col-xs-3 col-sm-3">
            <div class="row">
                <div class="col-xs-10 col-sm-10">
                    <strong class="text-warning lead">患者信息查询</strong>
                </div>
            </div>
            <hr />
            <form role="form">
                <div class="row">
                    <div class="col-xs-11 col-sm-11">
                        <div class="input-group">
                            <span class="input-group-addon" title="重置"><i class="fa fa-refresh"></i></span>
                            <input id="zyh" type="text" class="form-control" placeholder="住院号">
                            <span id="btn_searchpat" class="input-group-addon" title="查询"><i class="fa fa-search"></i></span>
                        </div>
                    </div>
                </div>
            </form>
            <hr />
            <div class="row">
                <div id="pat_treeview" class="col-xs-11 col-sm-11"></div>
                <div class="col-xs-11 col-sm-11">
                    <form>
                        <div class="form-group">
                            <label for="input-search" class="sr-only">病区信息搜索</label>
                            <input type="text" class="form-control" id="input-search" placeholder="请输入关键字" value="">
                        </div>
                        @*<div class="checkbox col-xs-6 col-sm-6">
                                <label>
                                    <input type="checkbox" class="checkbox" id="chk-ignore-case" value="false">
                                    忽略大小写
                                </label>
                            </div>*@
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" class="checkbox" id="chk-exact-match" value="false">
                                全字匹配
                            </label>
                        </div>
                        <div class=" col-xs-11 col-sm-11">
                            <button type="button" class="btn btn-info btn-block" id="btn-search">查找</button>
                            <button type="button" class="btn btn-default btn-block" id="btn-clear-search">清除</button>
                        </div>

                    </form>
                </div>

            </div>
        </div>
        <div class="col-xs-9 col-sm-9">
            <div class="row">
                <div class="col-xs-10 col-sm-10">
                </div>
            </div>

            <div class="rows">
                <table id="tabpatxx" class="form">
                    <tbody>
                        <tr>
                            <th class="formTitle thdrg"><strong>病案号:</strong></th>
                            <td class="formValue">
                                <label id="bah" style="margin-left:-10px;"></label>
                            </td>
                            <th class="formTitle thdrg"><strong>性别:</strong></th>
                            <td class="formValue">
                                <label id="xb" style="margin-left:-10px;"></label>
                            </td>
                            <th class="formTitle thdrg"><strong>年龄:</strong></th>
                            <td class="formValue">
                                <label id="nl" style="margin-left:-10px;"></label>
                            </td>
                            <th class="formTitle thdrg"><strong>年龄天:</strong></th>
                            <td class="formValue">
                                <label id="nlt" style="margin-left:-10px;"></label>
                            </td>
                            <th class="formTitle thdrg"><strong>出生体重:</strong></th>
                            <td class="formValue">
                                <label id="cstz" style="margin-left:-10px;"></label>
                            </td>
                            <th class="formTitle thdrg"><strong>科室:</strong></th>
                            <td class="formValue" style="width:12%">
                                <label id="ks" style="margin-left:-10px;"></label>
                            </td>
                            <th class="formTitle thdrg"><strong>住院天数:</strong></th>
                            <td class="formValue" style="width:12%">
                                <input id="zyts" class="form-control" />
                            </td>
                            <th class="formTitle thdrg"><strong>离院方式:</strong></th>
                            <td class="formValue" style="width:20%">
                                <select id="lyfs" class="form-control required">
                                    <option value="1">医嘱离院</option>
                                    <option value="2">医嘱转院</option>
                                    <option value="3">医嘱转社区卫生服务机构/乡镇卫生院</option>
                                    <option value="4">非医嘱离院</option>
                                    <option value="5">死亡</option>
                                    <option value="9">其他</option>
                                </select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div class="row" style="width:100%;height:25%;">
                <div class="col-xs-5 col-sm-5" style="float:left">
                    <table id="tabzd" style="float:left;"></table>
                </div>
                <div class="col-xs-6 col-sm-6" style="float:left">
                    <table id="tabss" style="float:left"></table>
                </div>
            </div>
            <div class="row">
                <table class="form">
                    <tr>
                        <th class="formTitle">诊断：</th>
                        <td class="formValue">
                            <input id="zdmc" class="form-control" />

                        </td>
                        <td class="formValue">
                            <button type="button" class="btn btn-info btn-block" id="btn-Drgaddzd" style="width:100px;float:left;">添加诊断</button>

                        </td>
                        <th class="formTitle">手术：</th>
                        <td class="formValue">
                            <input id="ssmc" class="form-control" />

                        </td>
                        <td class="formValue">
                            <button type="button" class="btn btn-info btn-block" id="btn-Drgaddss" style="width:100px;float:left;">添加手术</button>

                        </td>

                    </tr>
                </table>
            </div>
            <hr />
            <div class="row" >
                <button type="button" class="btn btn-info btn-block" id="btn-Drgfzcs" style="width:100px;float:left;">DRG分组测算</button>
            </div>
            <div class="row" style="width:100%;height:50%;">
                <div class="col-xs-7 col-sm-7">
                    <table id="tabxx" style="float:left;"></table>
                </div>
            </div>
        </div>
        </div>
</div>
<script>
    var zyh = "";
    $(function () {
        $(".container").height(window.innerHeight);
        if (!!zyh) {
            $("#zyh").val(zyh);
        }
        $("#btn_searchpat").on("click", function (e) {
            $.najax({
                url: "/DRGManage/DRGGroup/WardPatList",
                data: { zyh: $("#zyh").val(), ward: $("#bq").data("label") },
                dataType: "json",
                async: false,
                success: function (data) {
                    treeViewInit(data);
                }
            });
        });
        $("#btn-Drgaddzd").on("click", function (e) {
            if ($("#zyh").val()=="") {
                $.modalAlert("请选择住院号！", "error");
                return;
            }
            if ($("#zdmc").val() == "" && ($("#zdmc").attr("data-icd10") == undefined || $("#zdmc").attr("data-icd10") == "")) {
                $.modalAlert("请选择诊断", "error");
                return;
            }
            if ($("#zdmc").val() != "" && $("#zdmc").attr("data-icd10") != "") {
                var zdrows = $("#tabzd").bootstrapTable('getData');
                if (zdrows != null) {
                    $.each(zdrows, function () {
                        if (this.zddm != null && this.zddm != "") {
                            if (this.zddm == $("#zdmc").attr("data-icd10")) {
                                $.modalAlert("诊断重复！", "error");
                                return;
                            }
                                        
                        }
                    })
                }
                var data = {
                    zddm: $("#zdmc").attr("data-icd10"),
                    zdmc: $("#zdmc").val(),
                }
                $('#tabzd').bootstrapTable('append', data);
                $("#zdmc").val("");
                $("#zdmc").attr("data-icd10", "");
            }
        });
        $("#btn-Drgaddss").on("click", function (e) {
            if ($("#zyh").val() == "") {
                $.modalAlert("请选择住院号！", "error");
                return;
            }
            if ($("#ssmc").val() == "" && ($("#ssmc").attr("data-ssnm") == undefined || $("#ssmc").attr("data-ssnm") == "")) {
                $.modalAlert("请选择手术", "error");
                return;
            }
            if ($("#ssmc").val() != "" && $("#ssmc").attr("data-ssdm") != "") {
                var ssrows = $("#tabss").bootstrapTable('getData');
                if (ssrows != null) {
                    $.each(ssrows, function () {
                        if (this.ssdm != null && this.ssdm != "") {
                            if (this.ssdm == $("#ssmc").attr("data-ssdm")) {
                                $.modalAlert("手术重复！", "error");
                                return;
                            }
                        }
                    })
                    
                }
                var data = {
                    ssdm: $("#ssmc").attr("data-ssdm"),
                    ssmc: $("#ssmc").val(),
                }
                $('#tabss').bootstrapTable('append', data);
                $("#ssmc").val("");
                $("#ssmc").attr("data-ssdm", "");
            }
        });
        $("#btn-Drgfzcs").on("click", function (e) {
            if ($('#bah').text() == "") {
                $.modalAlert("请选择病人进行分组测算", "error");
                return;
            }
            var zdrows = $("#tabzd").bootstrapTable('getData');
            var ssrows = $("#tabss").bootstrapTable('getData');
            var zdstr = "";
            var ssstr = "";
            var nrlen = 0;
            if (zdrows != null) {
                $.each(zdrows, function () {
                    if (this.zddm != null && this.zddm != "") {
                        zdstr += this.zddm + ",";
                        nrlen += 1;
                    }
                })
                zdstr = zdstr.substr(0, zdstr.length - 1);
            }
            if (ssrows != null) {
                $.each(ssrows, function () {
                    if (this.ssdm != null && this.ssdm != "") {
                        ssstr += this.ssdm + ",";
                        nrlen += 1;
                    }
                })
                ssstr = ssstr.substr(0, ssstr.length - 1);
            }

            var patxx = {
                bah: $("#bah").text(),
                xb: $("#xb").text(),
                nl: $("#nl").text(),
                nlt: $("#nlt").text(),
                cstz: $("#cstz").text(),
                ks: $("#ks").text(),
                ts: $("#zyts").val(),
                LYFS: $("#lyfs").val()
            }
            $.najax({
                type: "POST",
                url: "/DRGManage/DRGGroup/DrgGroupByMedRecord",
                data: { patxx: patxx, zdlist: zdstr, sslist: ssstr },
                async: false,
                success: function (data) {
                    if (data.BusData == null) {
                        $.modalAlert(data.Message, "error");
                        return;
                    }
                    var drgfzmsg = "";
                    if (data.BusData.code == 10000) {
                        var fzdata = data.BusData.data.messages;
                        $("#tabxx").html("");
                        for (var i = nrlen; i < fzdata.length; i++) {
                            if (i == fzdata.length - 1) {
                                $("#tabxx").append("<tr><td style='font-size:15px;color:#9b1e64'>" + fzdata[i] + "</td> </tr>");
                            } else {
                                $("#tabxx").append("<tr><td style='font-size:15px;color:#5698c3'>" + fzdata[i] + "</td> </tr>");
                            }
                        }
                    }

                }
            });
            
        });
        $("#btn_searchpat").trigger("click");
        initTableZd();
        initTableSS();
        $("#zdmc").newtouchBatchFloatingSelector({
            height: 200,
            width: 600,
            clickautotrigger: true,
            url: "/PatientManage/HospiterRes/GetryzdSelect",
            ajaxparameters: function () {
                return "ryzd=" + $("#zdmc").val() + "&ybnhlx=" + "";
            },
            caption: "病案诊断",
            colModel: [
                { label: '名称', name: 'zdmc', widthratio: 60 },
                { label: '拼音', name: 'py', widthratio: 20 },
                { label: 'icd10', name: 'icd10', widthratio: 20 },
                { label: '编号', name: 'zdbh', hidden: true },
                { label: '内码', name: 'zdnm', hidden: true }
            ],
            itemdbclickhandler: function (data) {
                $("#zdmc").attr("data-zdnm", data.attr('data-zdnm'));
                $("#zdmc").attr("data-icd10", data.attr('data-icd10'));
                $("#zdmc").val(data.attr('data-zdmc'));
                return;
            }
        });
        $("#ssmc").newtouchBatchFloatingSelector({
            height: 200,
            width: 600,
            clickautotrigger: true,
            url: "/DRGManage/DRGGroup/GetOpList",
            ajaxparameters: function () {
                return "ssmc=" + $("#ssmc").val();
            },
            caption: "病案手术",
            colModel: [
                { label: '名称', name: 'ssmc', widthratio: 60 },
                { label: '编号', name: 'ssdm', widthratio: 20 },
            ],
            itemdbclickhandler: function (data) {
                $("#ssmc").attr("data-ssdm", data.attr('data-ssdm'));
                $("#ssmc").val(data.attr('data-ssmc'));
                return;
            }
        });
    });
    function GetPatInfo(zyh) {
        $("#zyh").val(zyh);
        $.najax({
            url: "/DRGManage/DRGGroup/PatInformationList",
            data: { zyh: zyh },
            dataType: "json",
            async: false,
            success: function (data) {
                if (data != null) {
                    $('#bah').text(data.bah);
                    if (data.xb == "1") {
                        $('#xb').text("男");
                    }
                    else {
                        $('#xb').text("女");
                    }
                    $('#nl').text(data.nl);
                    if (true) {

                    }
                    if (data.nlt == null || data.nlt == "") {
                        $('#nlt').text("0");
                    } else {
                        $('#nlt').text(data.nlt);
                    }
                    if (data.cstz == null || data.cstz == "") {
                        $('#cstz').text("0");
                    } else {
                        $('#cstz').text(data.cstz);
                    }
                    $('#ks').text(data.ks);
                    $('#zyts').val(data.ts);
                    if (data.lyfs == null || data.lyfs=="") {
                        $('#lyfs').val("1");
                    } else {
                        $('#lyfs').val(data.lyfs);
                    }
                } else {
                    $('#bah').text("");
                    $('#xb').text("");
                    $('#nl').text("");
                    $('#nlt').text("");
                    $('#cstz').text("");
                    $('#ks').text("");
                    $('#zyts').val("");
                    $('#lyfs').val("1");
                    $.modalAlert("未查询到病案数据！请到病历系统填写！", "error");
                }

            }
        });
        $.najax({
            url: "/DRGManage/DRGGroup/PatDiagnosisList",
            data: { zyh: zyh },
            dataType: "json",
            async: false,
            success: function (data) {
                $('#tabzd').bootstrapTable('load', data);
            }
        });
        $.najax({
            url: "/DRGManage/DRGGroup/PatOperationList",
            data: { zyh: zyh },
            dataType: "json",
            async: false,
            success: function (data) {
                $('#tabss').bootstrapTable('load', data);
            }
        });
    }
    function treeViewInit(data) {
        var $searchableTree = $('#pat_treeview').treeview({
            levels: 2,
            data: data,
            backColor: "#ddecfa",
            selectedBackColor: "#87bdd8",
            onNodeSelected: function (event, node) {
                //选中
                if (!!node && !!node.nodes) {
                    $('#pat_treeview').treeview('toggleNodeExpanded', [[node], { silent: false }]);
                }
                else if (!!node) {
                    GetPatInfo(node.href);
                }
            },
            onNodeUnselected: function (event, node) {
                //取消选中
                if (!!node) {
                    $('#pat_treeview').treeview('toggleNodeExpanded', [[node], { silent: false }]);
                }
            },
            onNodeCollapsed: function (event, node) {//收起事件

            },
            onNodeExpanded: function (event, node) {//展开事件
            }
        });

        var search = function (e) {
            var pattern = $('#input-search').val();
            var options = {
                ignoreCase: true,//$('#chk-ignore-case').is(':checked'),
                exactMatch: $('#chk-exact-match').is(':checked'),
                revealResults: false
            };
            var results = $searchableTree.treeview('search', [pattern, options]);

            //var output = '<p>' + results.length + ' matches found</p>';
            //$.each(results, function (index, result) {
            //    output += '<p>- ' + result.text + '</p>';
            //});
            //$('#search-output').html(output);
        }

        $('#btn-search').on('click', search);
        $('#input-search').on('keyup', search);

        $('#btn-clear-search').on('click', function (e) {
            $searchableTree.treeview('clearSearch');
            $('#input-search').val('');
            $('#search-output').html('');
        });



    }


    $('#zyh').newtouchBatchFloatingSelector({
        width: 500,
        height: 200,
        caption: "选择患者",
        clickautotrigger: true,
        url: "/ReportManage/Report/GetInpatientcryrq",
        ajaxparameters: function ($thisinput) {
            var keyword = $thisinput.val().trim();
            var zyh = $("#zyh").val();
            return "zyh=" + zyh;
        },
        itemdbclickhandler: function ($thistr, $thisinput) {
            if (!!$thistr.attr('data-zyh')) {
                $('#zyh').val($thistr.attr('data-zyh'));
            }
        },
        colModel: [
            { label: '住院号', name: 'zyh', width: 100 },
            { label: 'cyrq', name: 'cyrq', hidden: true },
            { label: 'ryrq', name: 'ryrq', hidden: true },
            { label: '在院标志', name: 'zybz', width: 100, align: 'left' },
            { label: '姓名', name: 'xm', width: 120, align: 'left' },
            { label: '出生年月', name: 'csny', hidden: true, width: 100, align: 'left' },
            {
                label: '性别', name: 'xb', width: 50, align: 'left', formatter: function (cellvalue) {
                    return $.getGender(cellvalue);
                }
            },
            {
                label: '年龄', name: 'nlshow', width: 50, align: 'left', formatter: function (cellvalue, a, b) {
                    return getAgeFromBirthTime({ begin: b.csny }).text;
                }
            }
        ]
    });

    ///病区
    $("#bq").newtouchBatchFloatingSelector({
        height: 200,
        width: 300,
        clickautotrigger: true,
        filter: function (keyword) {
            //遍历数据源，用keyword来筛选出结果
            var resultObjArr = new Array();
            var ks = $("#ksmc").attr("data-label");
            var bqlist = top.window.clients.sysWardDeptRelation.filter((item) => item.ks == ks);
            $.each(bqlist, function (idx, val) {
                if ((val.bqpy && val.bqpy.toLowerCase().indexOf(keyword.toLowerCase()) >= 0)
                    || (val.bqmc && val.bqmc.indexOf(keyword) >= 0)
                    || keyword.trim() == "") {
                    resultObjArr.push(val);
                }
            });
            return resultObjArr;

        },
        caption: "病区",
        colModel: [
            {
                label: '编号', name: 'bq', widthratio: 25
            },
            {
                label: '名称', name: 'bqmc', widthratio: 50
            }
        ],
        itemdbclickhandler: function ($thistr) {
            $("#bq").attr("data-label", $thistr.find("td:eq(0)").html());
            $("#bq").val($thistr.find('td:eq(1)').html());
            return;
        },
    });
    // 初始化表格 诊断信息
    function initTableZd(zyh) {
        $('#tabzd').bootstrapTable('destroy');
        $('#tabzd').bootstrapTable({
            //请求后台的URL（*）
            url: '/DRGManage/DRGGroup/PatDiagnosisList',
            //请求方式（*）
            method: 'Post',
            //请求数据的格式
            dataType: "json",
            //工具按钮用哪个容器
            // toolbar: '#toolbar',
            //是否显示行间隔色
            striped: true,
            //当数据为 undefined 时显示的字符
            undefinedText: "无",
            //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
            cache: false,
            //是否显示分页（*）
            pagination: false,
            height: 200,
            //是否启用排序
            sortable: true,
            //排序方式（desc，asc）
            sortOrder: "asc",
            //分页方式：client客户端分页，server服务端分页（*）
            // sidePagination: "server",
            sidePagination: "client",
            //初始化加载第一页，默认第一页,并记录
            pageNumber: 1,
            //每页的记录行数（*）
            pageSize: 5,
            //可供选择的每页的行数（*） 当记录条数大于最小可选择条数时才会出现
            pageList: [10, 20, 50, 100],
            paginationPreText: '上一页',
            paginationNextText: '下一页',
            //是否显示表格搜索,bootstrap-table服务器分页不能使用搜索功能，可以自定义搜索框
            search: false,
            // search: true,
            strictSearch: true,
            //是否显示所有的列（选择显示的列）
            showColumns: true,
            //是否显示刷新按钮
            showRefresh: true,
            //最少允许的列数
            minimumCountColumns: 2,
            //单击选中列表
            clickToSelect: true,
            //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
            //height: 500,
            //每一行的唯一标识，一般为主键列
            uniqueId: "id",
            //是否显示 切换试图（table/card）按钮
            showToggle: true,
            //是否显示详细视图
            cardView: false,
            //是否显示父子表
            detailView: false,
            //是否导出数据
            showExport: true,
            theadClasses: "thead-blue",//设置thead-blue为表头样式
            classes: "table table-bordered table-striped table-sm table-dark", 
            reorderableRows: true, //设置拖动排序
            useRowAttrFunc: true, //设置拖动排序
            Icons: 'glyphicon-export icon-share',
            //选择导出数据的范围，默认basic：只导出当前页的表格数据；all：导出所有数据；selected：导出选中的数据
            exportDataType: "all",
            //导出文件类型,因为导出png文件时会出现忽略的列也显示；导出PDF文件出现中文乱码的问题，所以根据需要只支持Excel文件类型即可
            //['json', 'xml', 'png', 'csv', 'txt', 'sql', 'doc', 'excel', 'pdf']
            exportTypes: ['excel'],
            // Icons:'glyphicon-export',
            // export: 'glyphicon-export icon-share',
            //导出设置
            exportOptions: {
                ignoreColumn: [0, 11],  //忽略某一列的索引
                worksheetName: 'sheet1',  //表格工作区名称
                // tableName: '总台帐报表',
                //导出文件的名称
                fileName: 'bootstrapTable表格数据',
            },
            //得到查询的参数
            queryParams: function (params) {
                debugger;
                //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                var temp = {
                    zyh: zyh
                };
                return temp;
            },
            columns: [{
                checkbox: false,
                visible: false  //是否显示复选框
                // visible: $(this).val() === 'selected'
            },{
                field: 'zddm',
                title: '诊断编码',
                sortable: true
            }, {
                field: 'zdmc',
                title: '诊断名称',
                sortable: true
            }
                ,
                {
                    field: 'shanchu',
                    title: '操作',
                    width: '80',
                    align: 'center',
                    formatter: function operateFormatter(value, row, index) {
                        return [
                            '<button type="button" class="btn btn-info" id="_rowDel">删除</button>'
                        ].join('');
                    },
                    events: {
                        'click #_rowDel': function (e, value, row, index) {
                            let uid = row.zddm;
                            $('#tabzd').bootstrapTable('remove', {
                                field: 'zddm',//对应该字段ID的columns的field
                                values: uid//字段ID的值
                            })
                        }
                    }
                },
                ,],
            onLoadSuccess: function () {
            },
            onLoadError: function () {
                alert("数据加载失败！");
            },
            //双击行数据的事件
            onDblClickRow: function (row, $element) {
                // var id = row.ID;
                // EditViewById(id, 'view');
            },
            //当选中行，拖拽时的哪行数据，并且可以获取这行数据的上一行数据和下一行数据
            onReorderRowsDrag: function (table, row) {

            },
            //拖拽完成后的这条数据，并且可以获取这行数据的上一行数据和下一行数据
            onReorderRowsDrop: function (table, row) {

            },
            //当拖拽结束后，整个表格的数据
            onReorderRow: function (newData) {
                //这里的newData是整个表格数据，数组形式。如需转json字符串用JSON.stringify();
                if (newData != null) {
                    //var zdIds = "";
                    //for (var i in newData) {
                    //    zdIds += newData[i].zdId + ",";
                    //}
                    //$.ajax({
                    //    type: "post",
                    //    url: "/DRGManage/DRGGroup/UpdatePatDiagnosisOrder",
                    //    data: {
                    //        "zdIds": zdIds
                    //    },
                    //    dataType: "json",
                    //    success: function (data) {
                    //        if (data.message == null || data.message == "") {
                    //            //$.modalAlert("顺序调整成功", "success");
                    //            $("#tabzd").bootstrapTable("refresh");
                    //        }  
                    //    },
                    //    error: function () {
                    //        $.modalAlert("顺序调整失败",  "error");
                    //    }
                    //});
                }
            }
        });
    }
    // 初始化表格 手术信息
    function initTableSS(zyh) {
        $('#tabss').bootstrapTable('destroy');
        $('#tabss').bootstrapTable({
            //请求后台的URL（*）
            url: '/DRGManage/DRGGroup/PatOperationList',
            //请求方式（*）
            method: 'Post',
            //请求数据的格式
            dataType: "json",
            //工具按钮用哪个容器
            // toolbar: '#toolbar',
            //是否显示行间隔色
            striped: true,
            //当数据为 undefined 时显示的字符
            undefinedText: "无",
            //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
            cache: false,
            //是否显示分页（*）
            pagination: false,
            //是否启用排序
            sortable: true,
            //排序方式（desc，asc）
            sortOrder: "asc",
            //分页方式：client客户端分页，server服务端分页（*）
            // sidePagination: "server",
            sidePagination: "client",
            //初始化加载第一页，默认第一页,并记录
            pageNumber: 1,
            //每页的记录行数（*）
            pageSize: 5,
            //可供选择的每页的行数（*） 当记录条数大于最小可选择条数时才会出现
            pageList: [10, 20, 50, 100],
            paginationPreText: '上一页',
            paginationNextText: '下一页',
            //是否显示表格搜索,bootstrap-table服务器分页不能使用搜索功能，可以自定义搜索框
            search: false,
            // search: true,
            strictSearch: false,
            //是否显示所有的列（选择显示的列）
            showColumns: true,
            //是否显示刷新按钮
            showRefresh: true,
            //最少允许的列数
            minimumCountColumns: 2,
            //单击选中列表
            clickToSelect: true,
            //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
            //height: 500,
            //每一行的唯一标识，一般为主键列
            uniqueId: "zdId",
            //是否显示 切换试图（table/card）按钮
            showToggle: true,
            //是否显示详细视图
            cardView: false,
            //是否显示父子表
            detailView: false,
            //是否导出数据
            showExport: true,
            theadClasses: "thead-blue",//设置thead-blue为表头样式
            classes: "table table-bordered table-striped table-sm table-dark", 
            reorderableRows: true, //设置拖动排序
            useRowAttrFunc: true, //设置拖动排序
            Icons: 'glyphicon-export icon-share',
            //选择导出数据的范围，默认basic：只导出当前页的表格数据；all：导出所有数据；selected：导出选中的数据
            exportDataType: "all",
            //导出文件类型,因为导出png文件时会出现忽略的列也显示；导出PDF文件出现中文乱码的问题，所以根据需要只支持Excel文件类型即可
            //['json', 'xml', 'png', 'csv', 'txt', 'sql', 'doc', 'excel', 'pdf']
            exportTypes: ['excel'],
            // Icons:'glyphicon-export',
            // export: 'glyphicon-export icon-share',
            //导出设置
            exportOptions: {
                ignoreColumn: [0, 11],  //忽略某一列的索引
                worksheetName: 'sheet1',  //表格工作区名称
                // tableName: '总台帐报表',
                //导出文件的名称
                fileName: 'bootstrapTable表格数据',
            },
            //得到查询的参数
            queryParams: function (params) {
                debugger;
                //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                var temp = {
                    zyh: zyh
                };
                return temp;
            },
            columns: [{
                checkbox: false,
                visible: false  //是否显示复选框
                // visible: $(this).val() === 'selected'
            }, {
                field: 'ssdm',
                title: '手术编码',
                sortable: true
            }, {
                field: 'ssmc',
                title: '手术名称',
                sortable: true
            }
                ,
                {
                    field: 'shanchu',
                    title: '操作',
                    width: '80',
                    align: 'center',
                    formatter: function operateFormatter(value, row, index) {
                        return [
                            '<button type="button" class="btn btn-info" id="_rowDelss">删除</button>'
                        ].join('');
                    },
                    events: {
                        'click #_rowDelss': function (e, value, row, index) {
                            let uid = row.ssdm;
                            $('#tabss').bootstrapTable('remove', {
                                field: 'ssdm',//对应该字段ID的columns的field
                                values: uid//字段ID的值
                            })
                        }
                    }
                },
                ,],
            onLoadSuccess: function () {
            },
            onLoadError: function () {
                alert("数据加载失败！");
            },
            //双击行数据的事件
            onDblClickRow: function (row, $element) {
                // var id = row.ID;
                // EditViewById(id, 'view');
            },
            //当选中行，拖拽时的哪行数据，并且可以获取这行数据的上一行数据和下一行数据
            onReorderRowsDrag: function (table, row) {

            },
            //拖拽完成后的这条数据，并且可以获取这行数据的上一行数据和下一行数据
            onReorderRowsDrop: function (table, row) {

            },
            //当拖拽结束后，整个表格的数据
            onReorderRow: function (newData) {
                //这里的newData是整个表格数据，数组形式。如需转json字符串用JSON.stringify();
                if (newData != null) {
                    //var ssIds = "";
                    //for (var i in newData) {
                    //    ssIds += newData[i].ssId + ",";
                    //}
                    //$.ajax({
                    //    type: "post",
                    //    url: "/DRGManage/DRGGroup/UpdatePatOperationOrder",
                    //    data: {
                    //        "ssIds": ssIds
                    //    },
                    //    dataType: "json",
                    //    success: function (data) {
                    //        if (data.message == null || data.message == "") {
                    //            //$.modalAlert("顺序调整成功", "success");
                    //            $("#tabss").bootstrapTable("refresh");
                    //        }
                    //    },
                    //    error: function () {
                    //        $.modalAlert("顺序调整失败", "error");
                    //    }
                    //});
                }
            }

        });
    }
</script>
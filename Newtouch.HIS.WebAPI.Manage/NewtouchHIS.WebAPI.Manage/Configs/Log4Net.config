<?xml version="1.0" encoding="utf-8"?>
<log4net>
	<!-- 将日志以回滚文件的形式写到文件中 -->
	<!-- 按日期切分日志文件，并将日期作为日志文件的名字 -->
	<appender name="RollingFileAppenderNameByDate" type="log4net.Appender.RollingFileAppender">
		<!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
		<file value="LogFile\info\" />
		<!-- 将日志信息追加到已有的日志文件中-->
		<appendToFile value="true" />
		<!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
		<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<!-- 指定按日期切分日志文件 -->
		<rollingStyle value="Date" />
		<!-- 日志文件的命名规则 -->
		<!--<datePattern value="&quot;Logs_&quot;yyyyMMdd&quot;.log&quot;"/>-->
		<datePattern value="yyyyMM/yyyyMMdd&quot;.log&quot;" />
		<!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
		<staticLogFileName value="false" />
		<maxSizeRollBackups value="5" />
		<maximumFileSize value="10MB" />
		<!-- 日志显示模板 -->
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="【%level】【执行时间】：%date %newline%thread %logger %newline%message%newline--------------------------------------------------------------------%newline" />
		</layout>
	</appender>
	<appender name="ErrorFileAppenderNameByDate" type="log4net.Appender.RollingFileAppender">
		<!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
		<file value="LogFile\error\" />
		<!-- 将日志信息追加到已有的日志文件中-->
		<appendToFile value="true" />
		<!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
		<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<!-- 指定按日期切分日志文件 -->
		<rollingStyle value="Date" />
		<!-- 日志文件的命名规则 -->
		<!--<datePattern value="&quot;Logs_&quot;yyyyMMdd&quot;.log&quot;"/>-->
		<datePattern value="yyyyMM/yyyyMMdd&quot;.log&quot;" />
		<!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
		<staticLogFileName value="false" />
		<maxSizeRollBackups value="5" />
		<maximumFileSize value="10MB" />
		<!-- 日志显示模板 -->
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="【%level】【异常时间】：%date %newline %thread %logger %newline%message%newline--------------------------------------------------------------------%newline" />
		</layout>
		<filter type="log4net.Filter.LevelRangeFilter,log4net">
			<levelMin value="ERROR" />
			<levelMax value="FATAL" />
		</filter>
	</appender>

	<root>
		<!-- 控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF -->
		<!-- 比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录 -->
		<!-- 如果没有定义LEVEL的值，则缺省为DEBUG -->
		<level value="ALL" />
		<!-- 按日期切分日志文件，并将日期作为日志文件的名字 -->
		<appender-ref ref="RollingFileAppenderNameByDate" />
		<appender-ref ref="ErrorFileAppenderNameByDate" />
	</root>
</log4net>
